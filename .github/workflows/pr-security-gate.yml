name: PR Security Gate

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  secret-scanning:
    runs-on: ubuntu-latest
    name: Block PRs with secrets

    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get PR diff
      run: |
        git fetch origin ${{ github.base_ref }}
        git diff origin/${{ github.base_ref }}..HEAD > pr.diff

    - name: Run Gitleaks on PR diff
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_ENABLE_COMMENTS: true

    - name: Check for secrets in entire history
      id: history_scan
      run: |
        # Install gitleaks
        wget https://github.com/gitleaks/gitleaks/releases/download/v8.16.1/gitleaks_8.16.1_linux_x64.tar.gz
        tar -xzf gitleaks_8.16.1_linux_x64.tar.gz
        chmod +x gitleaks

        # Scan PR branch history
        if ./gitleaks detect --source . --log-opts="origin/${{ github.base_ref }}..HEAD"; then
          echo "secrets_found=false" >> $GITHUB_OUTPUT
        else
          echo "secrets_found=true" >> $GITHUB_OUTPUT
        fi

    - name: Block PR if secrets found
      if: steps.history_scan.outputs.secrets_found == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          // Add blocking review
          await github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            event: 'REQUEST_CHANGES',
            body: `üö® **SECURITY VIOLATION: Secrets detected in PR**

This PR contains sensitive information that must be removed before merge.

### Required Actions:
1. Remove all secrets from the code
2. Rotate any exposed credentials immediately
3. Clean git history using BFG or git-filter-branch
4. Force push the cleaned branch
5. Request a new security review

### Resources:
- [How to remove sensitive data from Git history](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository)
- [BFG Repo-Cleaner](https://rtyley.github.io/bfg-repo-cleaner/)

**This PR is BLOCKED until all secrets are removed.**`
          });

          // Set PR status to failed
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.payload.pull_request.head.sha,
            state: 'failure',
            context: 'security/secrets',
            description: 'Secrets detected - PR blocked'
          });

          // Add security label
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: ['security-violation', 'blocked']
          });

          // Comment with details
          const comment = `## üîê Security Scan Results

**Status:** ‚ùå FAILED - Secrets detected

This PR cannot be merged until all secrets are removed from the git history.

<details>
<summary>Security scan details</summary>

\`\`\`
Secrets found in commits between origin/${{ github.base_ref }} and HEAD
Please check the Actions log for specific details.
\`\`\`

</details>

cc: @${{ github.repository_owner }} - Security violation requires immediate attention`;

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          });

          // Fail the check
          core.setFailed('Secrets detected in PR - merge blocked');

    - name: Approve if clean
      if: steps.history_scan.outputs.secrets_found == 'false'
      uses: actions/github-script@v6
      with:
        script: |
          // Set PR status to success
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.payload.pull_request.head.sha,
            state: 'success',
            context: 'security/secrets',
            description: 'No secrets detected'
          });

          // Add comment
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: '‚úÖ Security scan passed - no secrets detected'
          });

  enforce-security-policies:
    runs-on: ubuntu-latest
    needs: secret-scanning

    steps:
    - uses: actions/checkout@v4

    - name: Check branch protection
      uses: actions/github-script@v6
      with:
        script: |
          // Verify branch protection rules
          try {
            const protection = await github.rest.repos.getBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.payload.repository.default_branch
            });

            // Ensure required checks
            const requiredChecks = protection.data.required_status_checks?.contexts || [];
            const expectedChecks = ['security/secrets', 'build', 'test'];

            const missingChecks = expectedChecks.filter(check => !requiredChecks.includes(check));

            if (missingChecks.length > 0) {
              core.warning(`Missing required status checks: ${missingChecks.join(', ')}`);
            }

          } catch (error) {
            core.warning('Could not verify branch protection rules');
          }