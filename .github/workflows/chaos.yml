---
name: Chaos Engineering

'on':
  schedule:
    # Run every day at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  chaos-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Install Netlify CLI
        run: pnpm add -g netlify-cli

      - name: Run chaos deployment test
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          ./scripts/chaos-deployment-test.sh

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const webhookUrl = '${{ secrets.TEAMS_WEBHOOK_URL }}';
            if (webhookUrl) {
              await fetch(webhookUrl, {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({
                  title: 'ðŸ”¥ Chaos Test Failed',
                  text: 'Chaos deployment test failed - rollback may not be working correctly',
                  sections: [{
                    facts: [
                      {name: 'Repository', value: '${{ github.repository }}'},
                      {name: 'Workflow', value: 'Chaos Engineering'},
                      {name: 'Run ID', value: '${{ github.run_id }}'}
                    ]
                  }],
                  potentialAction: [{
                    '@type': 'OpenUri',
                    name: 'View Run',
                    targets: [{
                      os: 'default',
                      uri: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
                    }]
                  }]
                })
              });
            }