name: Brutal Zero-Drift Enforcement

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '*/10 * * * *'  # Every 10 minutes

jobs:
  enforce-everything:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: pnpm/action-setup@v2
      with:
        version: 9

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Test enforcement scripts
      run: ./scripts/test-enforcement-scripts.sh

    - name: Run unified enforcement
      env:
        CI: true
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      run: node scripts/enforce-all.js

    - name: Atomic drift validation
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      run: node scripts/atomic-drift-validator.js

    - name: Validate observability
      env:
        VITE_TELEMETRY_ENDPOINT: ${{ secrets.TELEMETRY_ENDPOINT }}
        VITE_ERROR_REPORT_ENDPOINT: ${{ secrets.ERROR_REPORT_ENDPOINT }}
        WEBHOOK_VALIDATOR_URL: ${{ secrets.WEBHOOK_VALIDATOR_URL }}
      run: node scripts/observability-validator.js

    - name: Prove rollback capability
      if: github.ref == 'refs/heads/main'
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        KILL_SWITCH_ENABLED: true
      run: node scripts/rollback-prover.js

    - name: Alert on any failure
      if: failure()
      uses: 8398a7/action-slack@v3
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      with:
        status: failure
        text: 'üö® CRITICAL: Zero-drift enforcement failed!'

  continuous-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Real-time drift detection
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      run: |
        while true; do
          if ! node scripts/atomic-drift-validator.js; then
            echo "DRIFT DETECTED at $(date)"

            # Immediate alert
            curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
              -H 'Content-type: application/json' \
              -d '{
                "text": "‚ö†Ô∏è DRIFT DETECTED - Immediate action required",
                "channel": "#critical-alerts"
              }'

            # Create incident
            curl -X POST https://api.pagerduty.com/incidents \
              -H 'Authorization: Token token=${{ secrets.PAGERDUTY_TOKEN }}' \
              -H 'Content-Type: application/json' \
              -d '{
                "incident": {
                  "type": "incident",
                  "title": "fact.rip Configuration Drift Detected",
                  "service": {
                    "id": "${{ secrets.PAGERDUTY_SERVICE_ID }}",
                    "type": "service_reference"
                  },
                  "urgency": "high"
                }
              }'

            break
          fi

          sleep 600  # Check every 10 minutes
        done